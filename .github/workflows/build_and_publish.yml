name: publish build to PyPI
on:
   push:
    branches: 
      - main
      - 

jobs:
  build_wheel_with_c:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-13, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      REQUIRE_SPEEDUPS: 1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry
      - name: Add requirements
        run: poetry install -v
      - name: Build package
        run: poetry build -f sdist
      - name: extract setup.py
        run: tar zxvf dist/seamless_entropy-*.tar.gz seamless_entropy-*/setup.py
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  
  upload_pypi:
    needs: build_wheel_with_c
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: "contains(github.event.head_commit.message, 'Release Version')"
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry
      - name: publish to pypi
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}


  publish_sdist:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'Release Version')"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install poetry
        run: pip install poetry
      - name: Add requirements
        run: poetry install -v
      - name: Build package
        run: poetry build -f sdist
      - name: publish to pypi
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
    
